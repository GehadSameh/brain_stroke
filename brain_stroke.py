{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "8f12036f",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-02-27T13:42:25.647374Z",
     "iopub.status.busy": "2025-02-27T13:42:25.647031Z",
     "iopub.status.idle": "2025-02-27T13:42:38.622122Z",
     "shell.execute_reply": "2025-02-27T13:42:38.621167Z"
    },
    "papermill": {
     "duration": 12.980815,
     "end_time": "2025-02-27T13:42:38.623757",
     "exception": false,
     "start_time": "2025-02-27T13:42:25.642942",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import os\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import tensorflow as tf\n",
    "from tensorflow import keras\n",
    "from tensorflow.keras.activations import sigmoid\n",
    "from tensorflow.keras.layers import Dense,Conv2D, Flatten, Dropout, MaxPooling2D, GlobalAveragePooling2D\n",
    "from tensorflow.keras.models import Model, Sequential\n",
    "from tensorflow.keras.metrics import Accuracy, Precision, Recall, AUC, BinaryAccuracy, FalsePositives, FalseNegatives, TruePositives, TrueNegatives\n",
    "from tensorflow.keras.callbacks import CSVLogger, ModelCheckpoint\n",
    "from tensorflow.keras.losses import BinaryCrossentropy\n",
    "from tensorflow.keras.optimizers import SGD, Adam\n",
    "from tensorflow.keras.applications import DenseNet121\n",
    "from tensorflow.keras import Sequential\n",
    "from sklearn.metrics import roc_curve, auc, roc_auc_score\n",
    "from tensorflow.keras.callbacks import ModelCheckpoint, ReduceLROnPlateau, LearningRateScheduler\n",
    "from sklearn.metrics import roc_curve, auc\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "dd52dafa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:42:38.631065Z",
     "iopub.status.busy": "2025-02-27T13:42:38.630596Z",
     "iopub.status.idle": "2025-02-27T13:42:44.453991Z",
     "shell.execute_reply": "2025-02-27T13:42:44.453338Z"
    },
    "papermill": {
     "duration": 5.828081,
     "end_time": "2025-02-27T13:42:44.455376",
     "exception": false,
     "start_time": "2025-02-27T13:42:38.627295",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Found 1843 files belonging to 2 classes.\n",
      "Found 235 files belonging to 2 classes.\n",
      "Found 437 files belonging to 2 classes.\n"
     ]
    }
   ],
   "source": [
    "image_size = (224, 224)\n",
    "batch_size = 32\n",
    "\n",
    "train_df = tf.keras.preprocessing.image_dataset_from_directory(\n",
    "    \"/kaggle/input/brain-stroke-prediction-ct-scan-image-dataset/Brain_Stroke_CT-SCAN_image/Train\",\n",
    "    image_size=image_size,\n",
    "    batch_size=batch_size,\n",
    ")\n",
    "val_df = tf.keras.preprocessing.image_dataset_from_directory(\n",
    "    \"/kaggle/input/brain-stroke-prediction-ct-scan-image-dataset/Brain_Stroke_CT-SCAN_image/Validation\",\n",
    "    image_size=image_size,\n",
    "    batch_size=batch_size,\n",
    ")\n",
    "test_df = tf.keras.preprocessing.image_dataset_from_directory(\n",
    "    \"/kaggle/input/brain-stroke-prediction-ct-scan-image-dataset/Brain_Stroke_CT-SCAN_image/Test\",\n",
    "    image_size=image_size,\n",
    "    batch_size=batch_size,\n",
    "    shuffle=False,   \n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c55c4ec1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:42:44.463683Z",
     "iopub.status.busy": "2025-02-27T13:42:44.463388Z",
     "iopub.status.idle": "2025-02-27T13:42:45.298500Z",
     "shell.execute_reply": "2025-02-27T13:42:45.297561Z"
    },
    "papermill": {
     "duration": 0.841501,
     "end_time": "2025-02-27T13:42:45.300034",
     "exception": false,
     "start_time": "2025-02-27T13:42:44.458533",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_true = np.concatenate([y for x, y in test_df], axis=0)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2d9733cc",
   "metadata": {
    "papermill": {
     "duration": 0.002699,
     "end_time": "2025-02-27T13:42:45.305940",
     "exception": false,
     "start_time": "2025-02-27T13:42:45.303241",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Dense Net Model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4bf4171e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:42:45.312382Z",
     "iopub.status.busy": "2025-02-27T13:42:45.312094Z",
     "iopub.status.idle": "2025-02-27T13:42:48.607694Z",
     "shell.execute_reply": "2025-02-27T13:42:48.606730Z"
    },
    "papermill": {
     "duration": 3.300692,
     "end_time": "2025-02-27T13:42:48.609349",
     "exception": false,
     "start_time": "2025-02-27T13:42:45.308657",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/densenet/densenet121_weights_tf_dim_ordering_tf_kernels_notop.h5\n",
      "\u001b[1m29084464/29084464\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n"
     ]
    }
   ],
   "source": [
    "base_model=tf.keras.applications.DenseNet121(input_shape=(224,224,3),include_top=False,weights='imagenet')\n",
    "for layer in base_model.layers[400:]:\n",
    "    layer.trainable = True\n",
    "\n",
    " \n",
    "x = base_model.output     \n",
    "\n",
    "x = GlobalAveragePooling2D()(x)\n",
    "predictions = Dense(1, activation='sigmoid',name='Final')(x)\n",
    "model = Model(inputs=base_model.input, outputs=predictions)\n",
    "\n",
    "model.compile(loss ='binary_crossentropy',optimizer='Adam',metrics=['accuracy',keras.metrics.Precision(),\n",
    "                                                                       keras.metrics.Recall(), keras.metrics.SpecificityAtSensitivity(0.5),\n",
    "                                                                       keras.metrics.SensitivityAtSpecificity(0.5)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "339377ea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:42:48.616663Z",
     "iopub.status.busy": "2025-02-27T13:42:48.616424Z",
     "iopub.status.idle": "2025-02-27T13:42:48.620715Z",
     "shell.execute_reply": "2025-02-27T13:42:48.620066Z"
    },
    "papermill": {
     "duration": 0.009157,
     "end_time": "2025-02-27T13:42:48.621867",
     "exception": false,
     "start_time": "2025-02-27T13:42:48.612710",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def get_callbacks(model_name):\n",
    "    callbacks =[]\n",
    "\n",
    "    checkpoint = tf.keras.callbacks.ModelCheckpoint(filepath=f'model.{model_name}.keras', verbose=1, monitor='val_loss',mode='min',save_best_only=True)\n",
    "    callbacks.append(checkpoint)\n",
    "    anne = ReduceLROnPlateau(monitor='val_loss', factor=0.5, patience=5, verbose=2, min_lr=0.0000001,min_delta=0.00001,mode='auto')\n",
    "    callbacks.append(anne)\n",
    "    earlystop = tf.keras.callbacks.EarlyStopping(monitor='val_loss', patience=10)\n",
    "    callbacks.append(earlystop)\n",
    "\n",
    "    return callbacks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "cdbe4fc8",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:42:48.628727Z",
     "iopub.status.busy": "2025-02-27T13:42:48.628514Z",
     "iopub.status.idle": "2025-02-27T13:49:34.637588Z",
     "shell.execute_reply": "2025-02-27T13:49:34.636637Z"
    },
    "papermill": {
     "duration": 406.013996,
     "end_time": "2025-02-27T13:49:34.638956",
     "exception": false,
     "start_time": "2025-02-27T13:42:48.624960",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2s/step - accuracy: 0.6470 - loss: 0.7250 - precision: 0.5715 - recall: 0.5152 - sensitivity_at_specificity: 0.7278 - specificity_at_sensitivity: 0.7355   \n",
      "Epoch 1: val_loss improved from inf to 28.58309, saving model to model.dense121.keras\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m299s\u001b[0m 2s/step - accuracy: 0.6484 - loss: 0.7220 - precision: 0.5734 - recall: 0.5174 - sensitivity_at_specificity: 0.7305 - specificity_at_sensitivity: 0.7382 - val_accuracy: 0.6681 - val_loss: 28.5831 - val_precision: 0.0000e+00 - val_recall: 0.0000e+00 - val_sensitivity_at_specificity: 0.5897 - val_specificity_at_sensitivity: 0.5223 - learning_rate: 0.0010\n",
      "Epoch 2/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 186ms/step - accuracy: 0.8243 - loss: 0.3821 - precision: 0.7895 - recall: 0.7515 - sensitivity_at_specificity: 0.9644 - specificity_at_sensitivity: 0.9720\n",
      "Epoch 2: val_loss improved from 28.58309 to 6.03314, saving model to model.dense121.keras\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 216ms/step - accuracy: 0.8252 - loss: 0.3805 - precision: 0.7907 - recall: 0.7528 - sensitivity_at_specificity: 0.9648 - specificity_at_sensitivity: 0.9723 - val_accuracy: 0.6170 - val_loss: 6.0331 - val_precision: 0.4634 - val_recall: 0.9744 - val_sensitivity_at_specificity: 0.9359 - val_specificity_at_sensitivity: 0.5223 - learning_rate: 0.0010\n",
      "Epoch 3/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - accuracy: 0.9375 - loss: 0.1740 - precision: 0.9251 - recall: 0.9246 - sensitivity_at_specificity: 0.9973 - specificity_at_sensitivity: 0.9959\n",
      "Epoch 3: val_loss improved from 6.03314 to 1.31999, saving model to model.dense121.keras\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 215ms/step - accuracy: 0.9375 - loss: 0.1739 - precision: 0.9252 - recall: 0.9245 - sensitivity_at_specificity: 0.9972 - specificity_at_sensitivity: 0.9959 - val_accuracy: 0.8511 - val_loss: 1.3200 - val_precision: 0.7172 - val_recall: 0.9103 - val_sensitivity_at_specificity: 0.9615 - val_specificity_at_sensitivity: 0.8917 - learning_rate: 0.0010\n",
      "Epoch 4/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 184ms/step - accuracy: 0.9486 - loss: 0.1266 - precision: 0.9334 - recall: 0.9395 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 1.0000\n",
      "Epoch 4: val_loss improved from 1.31999 to 0.29967, saving model to model.dense121.keras\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 214ms/step - accuracy: 0.9487 - loss: 0.1265 - precision: 0.9336 - recall: 0.9395 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 1.0000 - val_accuracy: 0.9234 - val_loss: 0.2997 - val_precision: 0.9167 - val_recall: 0.8462 - val_sensitivity_at_specificity: 0.9872 - val_specificity_at_sensitivity: 0.9936 - learning_rate: 0.0010\n",
      "Epoch 5/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - accuracy: 0.9487 - loss: 0.1514 - precision: 0.9467 - recall: 0.9273 - sensitivity_at_specificity: 0.9959 - specificity_at_sensitivity: 0.9973\n",
      "Epoch 5: val_loss did not improve from 0.29967\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 192ms/step - accuracy: 0.9487 - loss: 0.1513 - precision: 0.9467 - recall: 0.9274 - sensitivity_at_specificity: 0.9959 - specificity_at_sensitivity: 0.9973 - val_accuracy: 0.8340 - val_loss: 1.4458 - val_precision: 0.6970 - val_recall: 0.8846 - val_sensitivity_at_specificity: 0.9359 - val_specificity_at_sensitivity: 0.8981 - learning_rate: 0.0010\n",
      "Epoch 6/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 186ms/step - accuracy: 0.9826 - loss: 0.0648 - precision: 0.9767 - recall: 0.9810 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 0.9971\n",
      "Epoch 6: val_loss did not improve from 0.29967\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 193ms/step - accuracy: 0.9825 - loss: 0.0648 - precision: 0.9767 - recall: 0.9808 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 0.9971 - val_accuracy: 0.9106 - val_loss: 0.4736 - val_precision: 1.0000 - val_recall: 0.7308 - val_sensitivity_at_specificity: 0.8846 - val_specificity_at_sensitivity: 1.0000 - learning_rate: 0.0010\n",
      "Epoch 7/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 186ms/step - accuracy: 0.9593 - loss: 0.0986 - precision: 0.9547 - recall: 0.9445 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 1.0000\n",
      "Epoch 7: val_loss improved from 0.29967 to 0.13529, saving model to model.dense121.keras\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m13s\u001b[0m 216ms/step - accuracy: 0.9594 - loss: 0.0984 - precision: 0.9549 - recall: 0.9446 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 1.0000 - val_accuracy: 0.9660 - val_loss: 0.1353 - val_precision: 0.9375 - val_recall: 0.9615 - val_sensitivity_at_specificity: 0.9872 - val_specificity_at_sensitivity: 1.0000 - learning_rate: 0.0010\n",
      "Epoch 8/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - accuracy: 0.9758 - loss: 0.0853 - precision: 0.9769 - recall: 0.9633 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 0.9992\n",
      "Epoch 8: val_loss improved from 0.13529 to 0.04675, saving model to model.dense121.keras\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 215ms/step - accuracy: 0.9758 - loss: 0.0852 - precision: 0.9769 - recall: 0.9633 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 0.9992 - val_accuracy: 0.9745 - val_loss: 0.0467 - val_precision: 0.9500 - val_recall: 0.9744 - val_sensitivity_at_specificity: 1.0000 - val_specificity_at_sensitivity: 1.0000 - learning_rate: 0.0010\n",
      "Epoch 9/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 184ms/step - accuracy: 0.9899 - loss: 0.0342 - precision: 0.9848 - recall: 0.9905 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 0.9999\n",
      "Epoch 9: val_loss did not improve from 0.04675\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 192ms/step - accuracy: 0.9899 - loss: 0.0343 - precision: 0.9847 - recall: 0.9904 - sensitivity_at_specificity: 1.0000 - specificity_at_sensitivity: 0.9999 - val_accuracy: 0.9532 - val_loss: 0.0832 - val_precision: 0.9036 - val_recall: 0.9615 - val_sensitivity_at_specificity: 1.0000 - val_specificity_at_sensitivity: 1.0000 - learning_rate: 0.0010\n",
      "Epoch 10/10\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - accuracy: 0.9840 - loss: 0.0576 - precision: 0.9858 - recall: 0.9744 - sensitivity_at_specificity: 0.9986 - specificity_at_sensitivity: 1.0000\n",
      "Epoch 10: val_loss did not improve from 0.04675\n",
      "\u001b[1m58/58\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 193ms/step - accuracy: 0.9839 - loss: 0.0575 - precision: 0.9858 - recall: 0.9744 - sensitivity_at_specificity: 0.9986 - specificity_at_sensitivity: 1.0000 - val_accuracy: 0.7319 - val_loss: 1.1050 - val_precision: 0.5532 - val_recall: 1.0000 - val_sensitivity_at_specificity: 1.0000 - val_specificity_at_sensitivity: 0.8917 - learning_rate: 0.0010\n"
     ]
    }
   ],
   "source": [
    "callbacks = get_callbacks('dense121')\n",
    "history = model.fit( train_df,epochs=10,\n",
    "                    validation_data= val_df,\n",
    "                    callbacks=[callbacks])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "695a1c59",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:49:34.703806Z",
     "iopub.status.busy": "2025-02-27T13:49:34.703505Z",
     "iopub.status.idle": "2025-02-27T13:49:35.833794Z",
     "shell.execute_reply": "2025-02-27T13:49:35.832940Z"
    },
    "papermill": {
     "duration": 1.163949,
     "end_time": "2025-02-27T13:49:35.835145",
     "exception": false,
     "start_time": "2025-02-27T13:49:34.671196",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "acc = history.history['accuracy']\n",
    "val_acc = history.history['val_accuracy']\n",
    "loss = history.history['loss']\n",
    "val_loss = history.history['val_loss']\n",
    "epochs = range(1, len(acc) + 1)\n",
    "\n",
    "#Train and validation accuracy\n",
    "plt.plot(epochs, acc, label='Training accurarcy')\n",
    "plt.plot(epochs, val_acc, label='Validation accurarcy')\n",
    "plt.title('Training and Validation accurarcy')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Accuracy')\n",
    "plt.legend()\n",
    "\n",
    "plt.figure()\n",
    "#Train and validation loss\n",
    "plt.plot(epochs, loss,  label='Training loss')\n",
    "plt.plot(epochs, val_loss, label='Validation loss')\n",
    "plt.title('Training and Validation loss')\n",
    "plt.xlabel('Epochs')\n",
    "plt.ylabel('Loss')\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "672171b5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:49:35.902336Z",
     "iopub.status.busy": "2025-02-27T13:49:35.902052Z",
     "iopub.status.idle": "2025-02-27T13:49:38.933997Z",
     "shell.execute_reply": "2025-02-27T13:49:38.933030Z"
    },
    "papermill": {
     "duration": 3.066334,
     "end_time": "2025-02-27T13:49:38.935626",
     "exception": false,
     "start_time": "2025-02-27T13:49:35.869292",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model = keras.models.load_model('model.dense121.keras')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "085ec378",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:49:39.003750Z",
     "iopub.status.busy": "2025-02-27T13:49:39.003472Z",
     "iopub.status.idle": "2025-02-27T13:49:58.435804Z",
     "shell.execute_reply": "2025-02-27T13:49:58.435100Z"
    },
    "papermill": {
     "duration": 19.467182,
     "end_time": "2025-02-27T13:49:58.437058",
     "exception": false,
     "start_time": "2025-02-27T13:49:38.969876",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m19s\u001b[0m 718ms/step - accuracy: 0.9784 - loss: 0.0710 - precision: 0.3513 - recall: 0.4000 - sensitivity_at_specificity: 0.4000 - specificity_at_sensitivity: 0.4000\n"
     ]
    }
   ],
   "source": [
    "results = model.evaluate(test_df, verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9c721e1a",
   "metadata": {
    "papermill": {
     "duration": 0.033207,
     "end_time": "2025-02-27T13:49:58.504703",
     "exception": false,
     "start_time": "2025-02-27T13:49:58.471496",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "72e7c83b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:49:58.571833Z",
     "iopub.status.busy": "2025-02-27T13:49:58.571588Z",
     "iopub.status.idle": "2025-02-27T13:50:13.839774Z",
     "shell.execute_reply": "2025-02-27T13:50:13.838808Z"
    },
    "papermill": {
     "duration": 15.303864,
     "end_time": "2025-02-27T13:50:13.841436",
     "exception": false,
     "start_time": "2025-02-27T13:49:58.537572",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1m14/14\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m15s\u001b[0m 601ms/step\n"
     ]
    }
   ],
   "source": [
    "y_pred = model.predict(test_df, verbose=1).round()   #  because we use sigmoid  >= 0.5 ? 1 , 0\n",
    "y_pred = y_pred.flatten()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "898b1d14",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-27T13:50:13.918612Z",
     "iopub.status.busy": "2025-02-27T13:50:13.918257Z",
     "iopub.status.idle": "2025-02-27T13:50:14.955119Z",
     "shell.execute_reply": "2025-02-27T13:50:14.954215Z"
    },
    "papermill": {
     "duration": 1.073341,
     "end_time": "2025-02-27T13:50:14.956447",
     "exception": false,
     "start_time": "2025-02-27T13:50:13.883106",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "      Normal     1.0000    0.9772    0.9885       307\n",
      "      Stroke     0.9489    1.0000    0.9738       130\n",
      "\n",
      "    accuracy                         0.9840       437\n",
      "   macro avg     0.9745    0.9886    0.9811       437\n",
      "weighted avg     0.9848    0.9840    0.9841       437\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "from sklearn.metrics import confusion_matrix\n",
    "from imblearn.metrics import sensitivity_specificity_support\n",
    "from sklearn.metrics import classification_report\n",
    "import seaborn as sn\n",
    "import pandas as pd\n",
    "\n",
    "target_names= ['Normal', 'Stroke']\n",
    "\n",
    "report=classification_report(y_true, y_pred, target_names=target_names, digits=4)\n",
    "print(report)\n",
    "\n",
    "\n",
    "disp = confusion_matrix(y_true, y_pred)\n",
    "disp.astype('int')\n",
    "pd.options.display.float_format = '{:.5f}'.format\n",
    "df_cm = pd.DataFrame(disp, target_names, target_names)\n",
    "# plt.figure(figsize=(10,7))\n",
    "fig, ax = plt.subplots(figsize=(4,4))\n",
    "sn.set(font_scale=1.5) # for label size\n",
    "sn.heatmap(df_cm, annot=True, annot_kws={\"size\": 15},ax=ax, cmap=\"YlOrBr\" , fmt='g',cbar=False) # font size\n",
    "plt.ylabel('Actual',fontsize=20)\n",
    "plt.xlabel('Predicted',fontsize=20)\n",
    "plt.ioff()\n",
    "plt.savefig(\"confusion_mat\", bbox_inches='tight')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e943f401",
   "metadata": {
    "papermill": {
     "duration": 0.034141,
     "end_time": "2025-02-27T13:50:15.025338",
     "exception": false,
     "start_time": "2025-02-27T13:50:14.991197",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 2463204,
     "sourceId": 4174145,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30919,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 475.964137,
   "end_time": "2025-02-27T13:50:19.088592",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-27T13:42:23.124455",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
